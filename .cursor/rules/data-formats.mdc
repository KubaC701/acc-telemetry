---
description: Output data formats and telemetry data structure
---

# Data Formats and Telemetry Structure

## Telemetry Data Structure

### Internal Format (Python Dictionary)
During processing, each frame produces:
```python
{
    'frame': 733,           # Frame number (0-indexed)
    'time': 24.49,          # Timestamp in seconds
    'throttle': 67.8,       # Throttle percentage (0.0 - 100.0)
    'brake': 0.0,           # Brake percentage (0.0 - 100.0)
    'steering': 0.45        # Steering position (-1.0 to +1.0)
}
```

### Value Ranges
- **frame**: Integer, 0 to (frame_count - 1)
- **time**: Float, seconds from video start
- **throttle**: Float, 0.0% (no throttle) to 100.0% (full throttle)
- **brake**: Float, 0.0% (no brake) to 100.0% (full brake)
- **steering**: Float, -1.0 (full left) to +1.0 (full right), 0.0 is center

## CSV Output Format

Generated by [visualizer.py](mdc:src/visualizer.py) in `data/output/telemetry_YYYYMMDD_HHMMSS.csv`:

```csv
frame,time,throttle,brake,steering
0,0.00,0.0,0.0,0.02
1,0.03,15.4,0.0,0.03
2,0.07,34.8,0.0,0.05
```

### CSV Specifications
- **Header row**: Required (frame,time,throttle,brake,steering)
- **Delimiter**: Comma
- **Decimal separator**: Period (.)
- **Encoding**: UTF-8
- **Line endings**: Platform default (LF on Unix, CRLF on Windows)
- **Precision**: Floats rounded to 1-2 decimal places

### Usage Examples
- Open in Excel/Google Sheets for manual analysis
- Import into data analysis tools (Python pandas, R, MATLAB)
- Use with racing telemetry software (MoTeC, RaceStudio, etc.)
- Sync with video using frame numbers or timestamps

## PNG Graph Output

Generated visualization showing three stacked plots:

### Plot 1: Throttle Over Time
- **Color**: Green line with green fill
- **Y-axis**: Throttle (%) from 0 to 100
- **X-axis**: Time (seconds)

### Plot 2: Brake Over Time
- **Color**: Red line with red fill
- **Y-axis**: Brake (%) from 0 to 100
- **X-axis**: Time (seconds)

### Plot 3: Steering Over Time
- **Color**: Blue line
- **Y-axis**: Steering from -1.0 to +1.0
- **X-axis**: Time (seconds)
- **Reference line**: Gray dashed line at 0.0 (center)
- **Labels**: "Left" at bottom-left, "Right" at top-right

### Graph Specifications
- **Format**: PNG
- **Resolution**: 150 DPI
- **Dimensions**: 14×10 inches (2100×1500 pixels)
- **Title**: "ACC Telemetry Analysis"
- **Layout**: Tight layout with shared x-axis across all plots

## Summary Statistics

Generated by `visualizer.generate_summary()`:
```python
{
    'duration': 49.03,              # Total video duration (seconds)
    'total_frames': 1467,           # Total frames processed
    'avg_throttle': 45.3,           # Average throttle (%)
    'max_throttle': 100.0,          # Peak throttle (%)
    'avg_brake': 12.7,              # Average brake (%)
    'max_brake': 95.8,              # Peak brake (%)
    'avg_steering_abs': 0.23,       # Average absolute steering input
    'max_steering_left': -0.89,     # Maximum left steering
    'max_steering_right': 0.92      # Maximum right steering
}
```

## File Naming Convention
All output files use timestamp-based naming:
- **Pattern**: `telemetry_YYYYMMDD_HHMMSS.{csv,png}`
- **Example**: `telemetry_20251021_235757.csv`
- **Purpose**: Prevents overwriting previous analyses

To override with custom names, pass `filename` parameter to `export_csv()` or `plot_telemetry()`.

## Data Interpretation Tips

### Normal Driving Patterns
- **Straight**: High throttle, low brake, steering near 0.0
- **Braking zone**: Decreasing throttle, increasing brake, steering transitions
- **Apex**: Low/no throttle, no brake, maximum steering input
- **Exit**: Increasing throttle, no brake, steering returns to center

### Identifying Driving Issues
- **Simultaneous throttle + brake**: Trail braking (normal) or input error
- **Rapid steering oscillations**: Oversteer correction or instability
- **Low peak throttle values**: Conservative driving or traction control intervention
- **Extended brake applications**: Late braking or poor corner entry

### TC/ABS Detection
Color changes in video aren't directly captured in telemetry data, but you can infer:
- **TC intervention**: Throttle drops despite input (or plateaus below 100%)
- **ABS intervention**: Brake percentage fluctuates rapidly

For direct TC/ABS detection, future enhancement would analyze color changes in ROI.
